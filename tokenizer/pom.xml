<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>org.formentor</groupId>
    <version>1.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>tokenizer</artifactId>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <openhtml.version>1.0.10</openhtml.version>
        <junit.version>5.8.1</junit.version>
        <cucumber.version>7.0.0</cucumber.version>
        <okhttp.version>4.9.2</okhttp.version>
        <ipfs.version>1.3.3</ipfs.version>
        <web3j.version>4.8.9</web3j.version>
        <web3j-maven-plugin.version>4.8.8-SNAPSHOT</web3j-maven-plugin.version>
        <web3j-unit.version>4.8.9</web3j-unit.version>
        <klaxon.version>5.5</klaxon.version>
        <kotlin-logging.version>2.1.15</kotlin-logging.version>
        <slf4j.version>1.7.32</slf4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- junit -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- cucumber -->
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-bom</artifactId>
                <version>${cucumber.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- html to pdf -->
        <dependency>
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-core</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-pdfbox</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.ipfs</groupId>
            <artifactId>java-ipfs-http-client</artifactId>
            <version>${ipfs.version}</version>
        </dependency>
        <dependency>
            <groupId>org.web3j</groupId>
            <artifactId>core</artifactId>
            <version>${web3j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
            <scope>provided</scope>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- cucumber -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- mockwebserver -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${okhttp.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- web3j-unit -->
        <dependency>
            <groupId>org.web3j</groupId>
            <artifactId>web3j-unit</artifactId>
            <version>${web3j-unit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>klaxon</artifactId>
            <version>${klaxon.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging</artifactId>
            <version>${kotlin-logging.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <!-- Repository required by java-ipfs-http-client -->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>

        <!-- Repositories required by web3j-unit -->
        <repository>
            <id>repo.spring.io</id>
            <url>https://repo.spring.io</url>
        </repository>
        <repository>
            <id>besu</id>
            <url>https://hyperledger.jfrog.io/artifactory/besu-maven/</url>
        </repository>
        <repository>
            <id>consensys</id>
            <url>https://artifacts.consensys.net/public/maven/maven/</url>
        </repository>
        <repository>
            <id>splunk</id>
            <url>https://splunk.jfrog.io/splunk/ext-releases-local</url>
        </repository>
        <repository>
            <id>cloudsmith</id>
            <url>https://dl.cloudsmith.io/public/consensys/quorum-mainnet-launcher/maven/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
            <!--
            web3-maven-plugin
            mvn web3j:generate-sources
            -->
            <plugin>
                <groupId>org.web3j</groupId>
                <artifactId>web3j-maven-plugin</artifactId>
                <version>${web3j-maven-plugin.version}</version>
                <configuration>
                    <packageName>org.formentor.tokenizer.domain.ethereum.contract</packageName>
                    <sourceDestination/>
                    <nativeJavaType>true</nativeJavaType>
                    <outputFormat>java,abi,bin</outputFormat>
                    <soliditySourceFiles>
                        <directory>src/main/resources/ethereum</directory>
                        <includes>
                            <include>**/*.sol</include>
                        </includes>
                    </soliditySourceFiles>
                    <abiSourceFiles>
                        <directory>src/main/resources/ethereum/abi</directory>
                        <includes>
                            <include>**/*.json</include>
                        </includes>
                    </abiSourceFiles>
                    <outputDirectory>
                        <java>src/main/java</java>
                        <bin>src/main/resources/ethereum/build/bin</bin>
                        <abi>src/main/resources/ethereum/build/abi</abi>
                    </outputDirectory>
                    <contract>
                        <includes />
                        <excludes />
                    </contract>
                    <pathPrefixes>
                        <pathPrefix>dep=../dependencies</pathPrefix>
                    </pathPrefixes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>